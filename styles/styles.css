@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure, fieldset):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
  scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill=none],
[fill^=url])) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke=none],
[stroke^=url])) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Clash Display";
  src: url("../fonts/ClashDisplay-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Clash Display";
  src: url("../fonts/ClashDisplay-Semibold.woff2") format("woff2");
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Medium-Regular";
  src: url("../fonts/Medium-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-light: #ffffff;
  --color-gray: #191919;
  --color-dark: #000000;
  --font-family-base: "Clash Display", sans-serif;
  --transition-duration: 0.2s;
}

.container {
  margin-inline: auto;
  max-width: clamp(1400px, 1400px + (1920 - 1400) * (100vw - 1440px) / (1920 - 1440), 1920px);
  padding-inline: clamp(20px, 20px + (40 - 20) * (100vw - 1440px) / (1920 - 1440), 40px);
}
@media (max-width: 1400px) {
  .container {
    max-width: clamp(984px, 984px + (1400 - 984) * (100vw - 1024px) / (1440 - 1024), 1400px);
  }
}
@media (max-width: 984px) {
  .container {
    max-width: clamp(374px, 374px + (984 - 374) * (100vw - 402px) / (1024 - 402), 984px);
    padding-inline: clamp(14px, 14px + (20 - 14) * (100vw - 402px) / (1024 - 402), 20px);
  }
}

body {
  font-family: var(--font-family-base);
  font-weight: 400;
  line-height: 1.28;
  color: var(--color-light);
  background-color: var(--color-dark);
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

a,
button,
input,
textarea,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  text-decoration: none;
  color: inherit;
}

.main {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
}

.header {
  position: relative;
  top: 0;
  z-index: 1000;
}
.header__container {
  display: flex;
  flex-direction: column;
}
.header__logo {
  margin-inline: auto;
  max-width: clamp(138px, 138px + (187 - 138) * (100vw - 1440px) / (1920 - 1440), 187px);
  margin-top: clamp(56px, 56px + (72 - 56) * (100vw - 1440px) / (1920 - 1440), 72px);
  margin-bottom: clamp(56px, 56px + (72 - 56) * (100vw - 1440px) / (1920 - 1440), 72px);
}
@media (max-width: 1400px) {
  .header__logo {
    margin-top: clamp(54px, 54px + (56 - 54) * (100vw - 1024px) / (1440 - 1024), 56px);
    margin-bottom: clamp(54px, 54px + (56 - 54) * (100vw - 1024px) / (1440 - 1024), 56px);
  }
}
@media (max-width: 984px) {
  .header__logo {
    margin-top: clamp(36px, 36px + (54 - 36) * (100vw - 402px) / (1024 - 402), 54px);
    margin-bottom: clamp(36px, 36px + (54 - 36) * (100vw - 402px) / (1024 - 402), 54px);
  }
}
.header__menu {
  text-transform: uppercase;
}
.header__menu-button {
  color: var(--color-light);
  font-size: 20px;
  text-transform: inherit;
  padding: 0;
  background-color: transparent;
  border: none;
}
.header__menu-list {
  display: flex;
  justify-content: space-between;
  margin-inline: auto;
  font-size: clamp(16px, 16px + (20 - 16) * (100vw - 1440px) / (1920 - 1440), 20px);
  max-width: clamp(856px, 856px + (1160 - 856) * (100vw - 1440px) / (1920 - 1440), 1160px);
}
@media (max-width: 1400px) {
  .header__menu-list {
    max-width: clamp(564px, 564px + (856 - 564) * (100vw - 1024px) / (1440 - 1024), 856px);
  }
}
@media (max-width: 984px) {
  .header__menu-list {
    max-width: clamp(280px, 280px + (564 - 280) * (100vw - 402px) / (1024 - 402), 564px);
  }
}

.hero {
  flex-grow: 1;
  display: flex;
  align-items: center;
  justify-content: center;
}
.hero__container {
  display: flex;
  justify-content: center;
}
.hero__title {
  letter-spacing: 0.5em;
  font-family: "Medium-Regular", sans-serif;
  font-weight: 200;
  font-size: clamp(170px, 170px + (200 - 170) * (100vw - 1440px) / (1920 - 1440), 200px);
}
@media (max-width: 1400px) {
  .hero__title {
    font-size: clamp(103px, 103px + (170 - 103) * (100vw - 1024px) / (1440 - 1024), 170px);
  }
}
@media (max-width: 984px) {
  .hero__title {
    font-size: clamp(53px, 53px + (103 - 53) * (100vw - 402px) / (1024 - 402), 103px);
  }
}
.hero__title span {
  letter-spacing: 0;
}

.background {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: -1;
  overflow: hidden;
}
.background-video {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}/*# sourceMappingURL=styles.css.map */